---
steps:
  - name: "gcr.io/cloud-builders/docker"
    args: ["compose", "-f", "docker/compose.yaml", "build"]
    env:
      - "PROMPT_DIR=prompts/"
      - "DATA_PATH=data/"
  - name: "gcr.io/cloud-builders/docker"
    args: ["tag", "eeva-backend", "gcr.io/eeva-460211/eeva-backend"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/eeva-460211/eeva-backend"]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "eeva-cd",
        "--region=europe-west4",
        "--service-account=cd-builder@eeva-460211.iam.gserviceaccount.com",
        "--min-instances=0",
        "--concurrency=80",
        "--add-volume=name=prompts,type=cloud-storage,bucket=eeva-prompts",
        "--add-volume=name=data,type=cloud-storage,bucket=eeva-data",
        "--container=eeva-backend",
        "--image=gcr.io/eeva-460211/eeva-backend",
        "--port=8000",
        "--add-volume-mount=volume=prompts,mount-path=/prompts",
        "--add-volume-mount=volume=data,mount-path=/data",
        "--update-secrets=OPENAI_API_KEY=openai-prod-key:1",
      ]
    secretEnv: ["OPENAI_API_KEY"]
availableSecrets:
  secretManager:
    - versionName: projects/eeva-460211/secrets/openai-prod-key/versions/1
      env: "OPENAI_API_KEY"
logsBucket: "gs://eeva-logs"
serviceAccount: "projects/eeva-460211/serviceAccounts/cd-builder@eeva-460211.iam.gserviceaccount.com"
options:
  logging: "GCS_ONLY"
